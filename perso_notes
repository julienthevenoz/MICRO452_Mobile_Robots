open webcam
	vlc v4l2:///dev/video4



étapes :

1) Décider d'un terrain et d'obstacles (provisoires) et prendre une photo
2) Cany or Sobel Edge filter : smooth and highlight the edges
3) Extract the edges (Hough transform can only deal with straight lines, do we use polygonal obstacles or use some other transform) 
4)  ????






The vision module needs to define the map : 
	recognize what on the image is part of the terrain and not
	find the corners or edges of the map
	localize the obstacles in relation to the map
	localize the thymio (full pose : position and orientation)

What should the vision module return, and how ? Do we give coordinates (x,y) for corners of each obstacle ? Or do we give edges of the obstacles ?
	






Code taken from :
Serie2 sur la vision et tout
https://stackoverflow.com/questions/57940737/how-to-mask-everything-in-an-image-except-for-a-specific-color-inside 

La partie pour avoir le feed de la webcam vient de https://www.geeksforgeeks.org/how-to-capture-a-image-from-webcam-in-python/

Bcp de choses pour la partie trouver les coins, crop la carte etc vient de https://evergreenllc2020.medium.com/building-document-scanner-with-opencv-and-python-2306ee65c3db

Les fonctions order_points() et four_point_transform() sont directement tirés de https://pyimagesearch.com/2014/08/25/4-point-opencv-getperspective-transform-example/

Le file aruco.py provient en grande partie de chatgpt
autres sources aruco : https://stackoverflow.com/questions/77590669/drawmarker-in-cv2-aruco-not-found et 
https://stackoverflow.com/questions/74964527/attributeerror-module-cv2-aruco-has-no-attribute-dictionary-get


CITE THE OPENCV DOCS !!!!
